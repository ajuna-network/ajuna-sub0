//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi;
using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace HelloKusama.NetApiExt.Generated.Storage
{
    
    
    public sealed class DmpStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public DmpStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Dmp", "DownwardMessageQueues"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id), typeof(Ajuna.NetApi.Model.Types.Base.BaseVec<HelloKusama.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Dmp", "DownwardMessageQueueHeads"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id), typeof(HelloKusama.NetApiExt.Generated.Model.primitive_types.H256)));
        }
        
        /// <summary>
        /// >> DownwardMessageQueuesParams
        ///  The downward messages addressed for a certain para.
        /// </summary>
        public static string DownwardMessageQueuesParams(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id key)
        {
            return RequestGenerator.GetStorage("Dmp", "DownwardMessageQueues", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> DownwardMessageQueues
        ///  The downward messages addressed for a certain para.
        /// </summary>
        public async Task<Ajuna.NetApi.Model.Types.Base.BaseVec<HelloKusama.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>> DownwardMessageQueues(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id key, CancellationToken token)
        {
            string parameters = DmpStorage.DownwardMessageQueuesParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.Types.Base.BaseVec<HelloKusama.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>>(parameters, token);
        }
        
        /// <summary>
        /// >> DownwardMessageQueueHeadsParams
        ///  A mapping that stores the downward message queue MQC head for each para.
        /// 
        ///  Each link in this chain has a form:
        ///  `(prev_head, B, H(M))`, where
        ///  - `prev_head`: is the previous head hash or zero if none.
        ///  - `B`: is the relay-chain block number in which a message was appended.
        ///  - `H(M)`: is the hash of the message being appended.
        /// </summary>
        public static string DownwardMessageQueueHeadsParams(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id key)
        {
            return RequestGenerator.GetStorage("Dmp", "DownwardMessageQueueHeads", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> DownwardMessageQueueHeads
        ///  A mapping that stores the downward message queue MQC head for each para.
        /// 
        ///  Each link in this chain has a form:
        ///  `(prev_head, B, H(M))`, where
        ///  - `prev_head`: is the previous head hash or zero if none.
        ///  - `B`: is the relay-chain block number in which a message was appended.
        ///  - `H(M)`: is the hash of the message being appended.
        /// </summary>
        public async Task<HelloKusama.NetApiExt.Generated.Model.primitive_types.H256> DownwardMessageQueueHeads(HelloKusama.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id key, CancellationToken token)
        {
            string parameters = DmpStorage.DownwardMessageQueueHeadsParams(key);
            return await _client.GetStorageAsync<HelloKusama.NetApiExt.Generated.Model.primitive_types.H256>(parameters, token);
        }
    }
    
    public sealed class DmpCalls
    {
    }
}
